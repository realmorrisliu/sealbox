name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.1.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - name: Get version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Sealbox ${{ steps.get_version.outputs.version }}
        body: |
          ## What's Changed
          
          - See the [CHANGELOG](CHANGELOG.md) for detailed changes
          
          ## Download
          
          Download the Linux x86_64 binary: `sealbox-${{ steps.get_version.outputs.version }}-linux-x86_64.tar.gz`
          
          ## Quick Start
          
          ```bash
          # Extract the archive
          tar -xzf sealbox-${{ steps.get_version.outputs.version }}-linux-x86_64.tar.gz
          
          # Run the server
          STORE_PATH=/tmp/sealbox.db \
          AUTH_TOKEN=your-secret-token \
          LISTEN_ADDR=127.0.0.1:8080 \
          ./sealbox-server
          ```
        draft: false
        prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build release binary
      run: cargo build --release --all-features
    
    - name: Create archive
      run: |
        mkdir -p release
        cp target/release/sealbox-server release/
        cp target/release/sealbox-cli release/
        cp README.md LICENSE release/
        cd release
        tar czf ../sealbox-${{ needs.create-release.outputs.version }}-linux-x86_64.tar.gz *
    
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./sealbox-${{ needs.create-release.outputs.version }}-linux-x86_64.tar.gz
        asset_name: sealbox-${{ needs.create-release.outputs.version }}-linux-x86_64.tar.gz
        asset_content_type: application/gzip